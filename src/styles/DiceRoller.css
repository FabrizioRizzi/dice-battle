/* Dice container styling */
.dice-container {
  perspective: 1000px;
  margin: 20px;
  position: relative;
}

.dice {
  width: 80px;
  height: 80px;
  position: relative;
  transform-style: preserve-3d;
  border-radius: 10px;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  transition: transform 0.1s ease;
}

/* Animation for dice rolling */
.dice-container.rolling .dice {
  animation: rolling 1.5s ease;
}

@keyframes rolling {
  0% {
    transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
  }
  25% {
    transform: rotateX(360deg) rotateY(180deg) rotateZ(90deg);
  }
  50% {
    transform: rotateX(180deg) rotateY(360deg) rotateZ(180deg);
  }
  75% {
    transform: rotateX(270deg) rotateY(90deg) rotateZ(270deg);
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
  }
}

/* Bouncing animation when dice lands */
.dice-container:not(.rolling) .dice {
  animation: bounce 0.5s ease;
}

@keyframes bounce {
  0% {
    transform: translateY(-20px);
  }
  50% {
    transform: translateY(10px);
  }
  75% {
    transform: translateY(-5px);
  }
  100% {
    transform: translateY(0);
  }
}

/* Dice dots styling */
.dice-dots {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-areas: 
    "tl . tr"
    "ml c mr"
    "bl . br";
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  position: relative;
  padding: 10px;
}

.dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: white;
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.3);
  align-self: center;
  justify-self: center;
}

/* Dot positions */
.dot.top-left {
  grid-area: tl;
}
.dot.top-right {
  grid-area: tr;
}
.dot.middle-left {
  grid-area: ml;
}
.dot.middle-right {
  grid-area: mr;
}
.dot.center {
  grid-area: c;
}
.dot.bottom-left {
  grid-area: bl;
}
.dot.bottom-right {
  grid-area: br;
}

/* Winner announcement animation */
@keyframes fadeInScale {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.winner-announcement {
  animation: fadeInScale 0.6s ease-out forwards;
}

/* Player colors */
.dice.player1 {
  background: linear-gradient(135deg, #ef4444, #b91c1c);
}

.dice.player2 {
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
}

/* Shake effect for tie result */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.shake-tie {
  animation: shake 0.8s ease;
}

/* AI Phrase styling */
.ai-phrase-container {
  min-height: 30px;
  text-align: center;
  margin-top: 12px;
}

.ai-phrase {
  display: inline-block;
  animation: fadeInUp 0.6s ease-out forwards;
  text-shadow: 0 0 10px rgba(255, 255, 0, 0.5);
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Loading dots animation */
.loading-dots {
  display: inline-block;
}

.loading-dots span {
  animation: loadingDots 1.4s infinite;
  opacity: 0;
  display: inline-block;
}

.loading-dots span:nth-child(1) {
  animation-delay: 0s;
}

.loading-dots span:nth-child(2) {
  animation-delay: 0.2s;
}

.loading-dots span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes loadingDots {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}